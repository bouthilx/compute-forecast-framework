name: Test Suite Profiling

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 2 * * *'  # Run at 2 AM UTC daily
  pull_request:
    paths:
      - 'tests/**'
      - 'compute_forecast/**'
      - 'pytest.ini'
      - '.github/workflows/test-profiling.yml'

jobs:
  profile-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hour timeout for the entire job

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        test-group: ["unit", "integration", "functional", "performance"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        uv venv
        uv sync --group test --group docs

    - name: Run tests with profiling - ${{ matrix.test-group }}
      run: |
        uv run python scripts/run_tests_with_profiling.py tests/${{ matrix.test-group }} --coverage
      continue-on-error: true  # Don't fail the job if tests fail

    - name: Upload profile results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: profile-results-${{ matrix.python-version }}-${{ matrix.test-group }}
        path: |
          profile_results/
          test_results_*.xml
          benchmark_results_*.json
          htmlcov/
          *.svg
        retention-days: 7

    - name: Generate performance summary
      if: always()
      run: |
        echo "## Test Performance Summary - ${{ matrix.test-group }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f profile_results/combined.prof ]; then
          uv run python -c "
import pstats
p = pstats.Stats('profile_results/combined.prof')
p.sort_stats('cumulative')
p.print_stats(20)
" >> performance_summary.txt
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -50 performance_summary.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi

    - name: Check for slow tests
      if: always()
      run: |
        uv run python -c '
        import xml.etree.ElementTree as ET
        import sys
        from pathlib import Path
        
        try:
            test_files = list(Path(".").glob("test_results_*.xml"))
            if test_files:
                tree = ET.parse(test_files[0])
                root = tree.getroot()
                
                slow_tests = []
                for testcase in root.findall(".//testcase"):
                    time = float(testcase.get("time", 0))
                    if time > 5.0:  # Tests taking more than 5 seconds
                        name = f"{testcase.get(\"classname\")}.{testcase.get(\"name\")}"
                        slow_tests.append((name, time))
                
                if slow_tests:
                    print("⚠️ SLOW TESTS DETECTED:")
                    for test, time in sorted(slow_tests, key=lambda x: x[1], reverse=True)[:10]:
                        print(f"  - {test}: {time:.2f}s")
                    sys.exit(1)
        except:
            pass
        '

  aggregate-results:
    needs: profile-tests
    runs-on: ubuntu-latest
    if: always()

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-results

    - name: Generate consolidated report
      run: |
        echo "# Test Suite Performance Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Generated on: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        # Add more analysis here as needed
